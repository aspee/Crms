/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 SELECT location.name,COUNT(tblIPC.ipc) AS NumberOfOrders FROM (select * from tblIPC where ipc=0) as tblIPC
 right Join location
 ON tblIPC.state=location.name where location.parent_id=100
 GROUP BY location.name order by tblIPC.ipc desc;
 */
//SELECT location.name,COUNT(tblIPC.ipc) AS NumberOfOrders FROM tblIPC
// right Join location
// ON tblIPC.state=location.name where location.parent_id=100
// GROUP BY location.name order by tblIPC.ipc desc;
package crms;

import static com.sun.xml.internal.fastinfoset.alphabet.BuiltInRestrictedAlphabets.table;
import java.math.BigDecimal;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyledDocument;

/**
 *
 * @author Orlon
 */
public class Report extends javax.swing.JPanel {

    /**
     * Creates new form Report
     */
    DefaultTableModel dm;

    public Report() {
        dm = new DefaultTableModel(0, 0) {

            @Override
            public boolean isCellEditable(int row, int column) {
                //all cells false
                return false;
            }

        };
        dm.isCellEditable(0, 0);
        initComponents();
        jXTable1.setShowGrid(false, false);
        crimeRate();
        jXTable1.setEnabled(false);
        jTextArea1.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pc = new javax.swing.JComboBox(ipc());
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jXTable1 = new org.jdesktop.swingx.JXTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new crms.CButton();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        pc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        pc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                pcItemStateChanged(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jScrollPane2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane2.setViewportBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jXTable1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jXTable1.setModel(dm);
        jXTable1.setEditable(false);
        jScrollPane2.setViewportView(jXTable1);

        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("Complete Criminal Rate");
        jTextArea1.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 445, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jScrollPane2)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );

        jLabel1.setFont(new java.awt.Font("HP Simplified Light", 0, 11)); // NOI18N
        jLabel1.setText("Print");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jLabel2.setText("IPC");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pc, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(252, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(3, 3, 3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(25, 25, 25))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void pcItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_pcItemStateChanged
        crimeRate();
        if (pc.getSelectedItem().equals("All")) {
            jTextArea1.setText("Complete Criminal Rate");
        } else {
            Section();
        }
    }//GEN-LAST:event_pcItemStateChanged

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        PrintUtilities p = new PrintUtilities(jPanel1);
        p.print();
    }//GEN-LAST:event_jLabel1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private org.jdesktop.swingx.JXTable jXTable1;
    private javax.swing.JComboBox pc;
    // End of variables declaration//GEN-END:variables

    public void crimeRate() {
        try {
            dm.setRowCount(0);
            String a;
            if (pc.getSelectedItem().equals("All")) {
                a = "<>0";
            } else {
                a = "='" + pc.getSelectedItem().toString() + "'";
            }
            ResultSet rs2 = Database.getStatement().executeQuery(" SELECT location.name,COUNT(tblIPC.ipc) AS NumberOfOrders FROM (select * from tblIPC where ipc" + a + ") as tblIPC\n"
                    + " right Join location\n"
                    + " ON tblIPC.state=location.name where location.parent_id=100\n"
                    + " GROUP BY location.name order by tblIPC.ipc desc");
            //tblIPC.ipc='"+jComboBox1.getSelectedItem()+"'"
            ResultSetMetaData rsmd = rs2.getMetaData();
            int num = rsmd.getColumnCount();
            dm.setColumnIdentifiers(new String[]{"State", "Cognizable Crime Rate (per 100,000) "});
            while (rs2.next()) {
                String rowdata[] = new String[num];
                for (int i = 0; i < num; i++) {
                    if (i == 1) {

                        BigDecimal z = new BigDecimal(rs2.getDouble(i + 1));
                        BigDecimal c = new BigDecimal(1000000);
                        z = z.divide(c);

                        rowdata[i] = "" + z;
                        System.out.println(rowdata[i]);
                    } else {
                        rowdata[i] = rs2.getString(i + 1);
                    }
                }
                dm.addRow(rowdata);
            }

        } catch (SQLException ex) {
            Logger.getLogger(Report.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private String[] ipc() {
        System.out.println("lo");
        List<String> stockList = new ArrayList<String>();
        stockList.add("All");
        try {
            ResultSet rsback = Database.getStatement().executeQuery("select Sections from Contents");
            while (rsback.next()) {
                stockList.add(rsback.getString(1));

            }
        } catch (SQLException ex) {
            Logger.getLogger(AddC.class.getName()).log(Level.SEVERE, null, ex);
        }

        String[] stockArr = new String[stockList.size()];
        stockArr = stockList.toArray(stockArr);
        return stockArr;
    }

    private void Section() {
        try {
            
            jTextArea1.setAlignmentX(JLabel.CENTER);
             jTextArea1.setAlignmentY(JLabel.CENTER);
          //  jTextArea1.setAlignmentY(TOP_ALIGNMENT);
            ResultSet rs2 = Database.getStatement().executeQuery("select * from Contents where Sections='" + pc.getSelectedItem() + "'");
            if (rs2.next()) {

                jTextArea1.setText(rs2.getString(1) + ":" + rs2.getString(2));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Crimes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
