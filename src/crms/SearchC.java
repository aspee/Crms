/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package crms;

import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Orlon
 */
public class SearchC extends javax.swing.JPanel {

    /**
     * Creates new form SearchC
     */
    DefaultTableModel dtm;
    DefaultComboBoxModel mState, mCity;
    PreparedStatement pst;
    javax.swing.JFrame parent;
    private TableRowSorter<TableModel> rowSorter;

    public SearchC(javax.swing.JFrame parent) {
        this.parent = parent;
        mState = new DefaultComboBoxModel();
        mCity = new DefaultComboBoxModel();
        allStates();
        dtm = new DefaultTableModel(0, 0) {

            @Override
            public boolean isCellEditable(int row, int column) {
                //all cells false
                return false;
            }

            //  Returning the Class of each column will allow different
            //  renderers to be used based on Class
            @Override
            public Class<?> getColumnClass(int column) {
                if (getRowCount() > 0) {
                    Object value = getValueAt(0, column);
                    if (value != null) {
                        return getValueAt(0, column).getClass();
                    }
                }

                return super.getColumnClass(column);
            }

        };
        dtm.isCellEditable(0, 0);
        initComponents();
        fetchCriminals();
        this.rowSorter = new TableRowSorter<>(jTable3.getModel());
        jTable3.setRowSorter(rowSorter);
        jScrollPane1.getViewport().setBackground(Color.WHITE);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable(dtm);
        tCell1 = new javax.swing.JTextField();
        lCell1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lGender = new javax.swing.JLabel();
        tFirst = new javax.swing.JTextField();
        tLast = new javax.swing.JTextField();
        cState = new javax.swing.JComboBox(mState);
        lMiddle = new javax.swing.JLabel();
        lInch = new javax.swing.JLabel();
        lArrest = new javax.swing.JLabel();
        tSection = new javax.swing.JTextField();
        lHeight = new javax.swing.JLabel();
        rMale = new javax.swing.JRadioButton();
        lLast = new javax.swing.JLabel();
        tInch = new javax.swing.JTextField();
        tColor = new javax.swing.JComboBox();
        lHair = new javax.swing.JLabel();
        lFoot = new javax.swing.JLabel();
        cMarital = new javax.swing.JComboBox();
        A = new javax.swing.JRadioButton();
        lCity = new javax.swing.JLabel();
        lCell = new javax.swing.JLabel();
        tArrestDate = new com.toedter.calendar.JDateChooser();
        tMiddle = new javax.swing.JTextField();
        rFemale = new javax.swing.JRadioButton();
        tEyes = new javax.swing.JTextField();
        cCity = new javax.swing.JComboBox(mCity);
        lFirst = new javax.swing.JLabel();
        cBloodgroup = new javax.swing.JComboBox();
        lEyes = new javax.swing.JLabel();
        tdob = new com.toedter.calendar.JDateChooser();
        tFacility = new javax.swing.JTextField();
        lFacility = new javax.swing.JLabel();
        lBloodgroup = new javax.swing.JLabel();
        lMarital = new javax.swing.JLabel();
        lColor = new javax.swing.JLabel();
        tFoot = new javax.swing.JTextField();
        lState = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lId = new javax.swing.JLabel();
        CID1 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        tWeight = new javax.swing.JTextField();
        cHair = new javax.swing.JComboBox();
        ldob = new javax.swing.JLabel();
        lName = new javax.swing.JLabel();
        lWeight = new javax.swing.JLabel();
        lSection = new javax.swing.JLabel();
        tCell = new javax.swing.JTextField();
        jLabel1 = new crms.CButton();
        jLabel2 = new crms.CButton();
        jLabel3 = new crms.CButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(906, 574));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jScrollPane1.setOpaque(false);
        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseClicked(evt);
            }
        });

        jTable3.setOpaque(false);
        jTable3.setSelectionBackground(new java.awt.Color(66, 133, 244));
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable3);

        tCell1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tCell1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tCell1KeyTyped(evt);
            }
        });

        lCell1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lCell1.setText("Quick Search");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        lGender.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lGender.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lGender.setText("Gender ");

        tFirst.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tFirstActionPerformed(evt);
            }
        });

        tLast.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tLastActionPerformed(evt);
            }
        });

        cState.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cState.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cStateItemStateChanged(evt);
            }
        });
        cState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cStateActionPerformed(evt);
            }
        });

        lMiddle.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lMiddle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lMiddle.setText("Middle");

        lInch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lInch.setText("inch");

        lArrest.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lArrest.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lArrest.setText("Arrest Date");

        tSection.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lHeight.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lHeight.setText("Height");

        rMale.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(rMale);
        rMale.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rMale.setText("M");

        lLast.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lLast.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lLast.setText("Last");
        lLast.setToolTipText("");

        tInch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tInch.setText("0");
        tInch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tInchKeyTyped(evt);
            }
        });

        tColor.setEditable(true);
        tColor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tColor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Light", "Fair", "Medium", "Olive", "Brown", "Black" }));
        tColor.setToolTipText("");
        tColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tColorActionPerformed(evt);
            }
        });

        lHair.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lHair.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lHair.setText("Hair");

        lFoot.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lFoot.setText("ft.");

        cMarital.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cMarital.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Single", "Married", "Widowed", "Separated", "Divorced" }));
        cMarital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cMaritalActionPerformed(evt);
            }
        });

        A.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(A);
        A.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        A.setText("A");

        lCity.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lCity.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lCity.setText("City ");

        lCell.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lCell.setText("Cell");

        tMiddle.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tMiddle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tMiddleActionPerformed(evt);
            }
        });

        rFemale.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(rFemale);
        rFemale.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rFemale.setText("F");

        tEyes.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        cCity.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lFirst.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lFirst.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lFirst.setText("First");

        cBloodgroup.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cBloodgroup.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "A +ve", "A -ve", "B +ve", "B -ve", "O +ve", "O -ve", "AB +ve", "AB -ve" }));
        cBloodgroup.setToolTipText("");
        cBloodgroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cBloodgroupActionPerformed(evt);
            }
        });

        lEyes.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lEyes.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lEyes.setText("Eyes ");

        tFacility.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lFacility.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lFacility.setText("Facility");

        lBloodgroup.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lBloodgroup.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lBloodgroup.setText("Blood Group ");

        lMarital.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lMarital.setText("Marital Status ");

        lColor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lColor.setText("Color");

        tFoot.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tFoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tFootActionPerformed(evt);
            }
        });
        tFoot.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tFootKeyTyped(evt);
            }
        });

        lState.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lState.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lState.setText("State ");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setToolTipText("");

        lId.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lId.setText("ID");
        lId.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        CID1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        CID1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CID1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        CID1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CID1ActionPerformed(evt);
            }
        });
        CID1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CID1KeyTyped(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton3.setText("Search");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton4.setText("Clear");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lId)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CID1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addGap(0, 2, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lId)
                    .addComponent(CID1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tWeight.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tWeight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tWeightKeyTyped(evt);
            }
        });

        cHair.setEditable(true);
        cHair.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cHair.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Straight", "Curly" }));

        ldob.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ldob.setText("DOB");

        lName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lName.setText("Name");

        lWeight.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lWeight.setText("Weight (In Kg.)");

        lSection.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lSection.setText("Section");

        tCell.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tCell.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tCellKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGap(117, 117, 117)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(lFirst, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(33, 33, 33))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(tFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cMarital, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(lMiddle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lLast, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(tMiddle, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(tLast, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(lState, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(cState, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(lCity, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(14, 14, 14)
                                                .addComponent(cCity, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(45, 45, 45)
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(cHair, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(tWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addComponent(lArrest)))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(lMarital, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lName, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tFoot, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lFoot)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tInch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lInch)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lHair, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lWeight))
                                .addGap(311, 311, 311)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lGender)
                                    .addComponent(lEyes, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(tEyes, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(37, 37, 37))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(A)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(rMale)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(39, 39, 39)
                                                .addComponent(rFemale, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(33, 33, 33))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(ldob, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tdob, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                    .addGap(332, 332, 332)
                                    .addComponent(tSection, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(lCell, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tCell, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(lFacility, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(159, 159, 159)
                                    .addComponent(lSection)
                                    .addGap(287, 287, 287)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(117, 117, 117)
                                .addComponent(tFacility, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(tArrestDate, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(lColor, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGap(344, 344, 344)
                                            .addComponent(lBloodgroup, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(cBloodgroup, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGap(32, 32, 32)
                                            .addComponent(tColor, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(255, 255, 255))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lFirst)
                    .addComponent(lMiddle)
                    .addComponent(lLast))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addComponent(lName))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tFirst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tMiddle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tLast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ldob)))
                    .addComponent(tdob, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lGender)
                        .addComponent(rMale)
                        .addComponent(rFemale)
                        .addComponent(A))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lState)
                        .addComponent(cState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lMarital, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cMarital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lCity)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lHeight)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tFoot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lFoot)
                        .addComponent(tInch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lInch))
                    .addComponent(lWeight)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tArrestDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lArrest)
                                .addComponent(lEyes)
                                .addComponent(tEyes, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(tWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lColor)
                            .addComponent(tColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lHair)
                            .addComponent(cHair, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lBloodgroup)
                            .addComponent(cBloodgroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tFacility, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lFacility)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lSection)
                                .addComponent(tSection, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lCell)
                                .addComponent(tCell, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel1.setText("Edit");
        jLabel1.setPreferredSize(new java.awt.Dimension(67, 25));
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jLabel2.setText("Delete");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        jLabel3.setText("Show");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 879, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 879, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lCell1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(tCell1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tCell1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lCell1))
                .addContainerGap(63, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jScrollPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jScrollPane1MouseClicked

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        if (evt.getClickCount() == 2 && !evt.isConsumed()) {
            evt.consume();
            new Show((Integer.parseInt("" + jTable3.getValueAt(jTable3.getSelectedRow(), 0)))).setVisible(true);

            //handle double click event.
        }
    }//GEN-LAST:event_jTable3MouseClicked

    private void tFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tFirstActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tFirstActionPerformed

    private void tMiddleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tMiddleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tMiddleActionPerformed

    private void tLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tLastActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tLastActionPerformed

    private void cStateItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cStateItemStateChanged
        try {
            // TODO add your handling code here:
            //cCity.removeAllItems();
            //  mState.removeElement("");
            mCity.removeAllElements();

            ResultSet rs = Database.getStatement().executeQuery("select location_id from location where name='" + mState.getSelectedItem() + "'");
            int lid = 100;
            while (rs.next()) {
                lid = rs.getInt(1);
            }
            ResultSet rs1 = Database.getStatement().executeQuery("select name from location where parent_id=" + lid);
            Boolean empty = true;
            while (rs1.next()) {
                mCity.addElement(rs1.getString(1));
                empty = false;
            }
            if (empty == true) {
                mCity.addElement("");
            }

        } catch (SQLException ex) {
            Logger.getLogger(AddC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cStateItemStateChanged

    private void cStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cStateActionPerformed

    }//GEN-LAST:event_cStateActionPerformed

    private void cMaritalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cMaritalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cMaritalActionPerformed

    private void tColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tColorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tColorActionPerformed

    private void cBloodgroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cBloodgroupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cBloodgroupActionPerformed

    private void tWeightKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tWeightKeyTyped
        // TODO add your handling code here:
        char caracter = evt.getKeyChar();
        if (((caracter < '0') || (caracter > '9')) || tWeight.getText().length() >= 3 && (caracter != '\b')) {
            evt.consume();
        }
    }//GEN-LAST:event_tWeightKeyTyped

    private void tInchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tInchKeyTyped
        // TODO add your handling code here:
        char caracter = evt.getKeyChar();
        if (((caracter < '0') || (caracter > '9')) || tInch.getText().length() >= 1 && (caracter != '\b')) {
            evt.consume();
        }
    }//GEN-LAST:event_tInchKeyTyped

    private void tFootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tFootActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tFootActionPerformed

    private void tFootKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tFootKeyTyped
        // TODO add your handling code here:
        char caracter = evt.getKeyChar();
        if (((caracter < '0') || (caracter > '9')) || tFoot.getText().length() >= 2 && (caracter != '\b')) {
            evt.consume();
        }
    }//GEN-LAST:event_tFootKeyTyped

    private void tCellKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tCellKeyTyped
        // TODO add your handling code here:
        char caracter = evt.getKeyChar();
        if (((caracter < '0') || (caracter > '9')) || tCell.getText().length() >= 11 && (caracter != '\b')) {
            evt.consume();
        }
    }//GEN-LAST:event_tCellKeyTyped

    private void tCell1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tCell1KeyTyped
        String text = tCell1.getText();
        if (text.trim().length() == 0) {
            rowSorter.setRowFilter(null);
        } else {
            rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
        }        // TODO add your handling code here:
    }//GEN-LAST:event_tCell1KeyTyped

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        searchButton();
        ;
    }//GEN-LAST:event_jButton3ActionPerformed

    private void CID1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CID1KeyTyped
        // TODO add your handling code here:
        char caracter = evt.getKeyChar();
        if (((caracter < '0') || (caracter > '9')) && (caracter != '\b')) {
            evt.consume();
        }
    }//GEN-LAST:event_CID1KeyTyped

    private void CID1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CID1ActionPerformed
        // TODO add your handling code here:

        searchButton();
    }//GEN-LAST:event_CID1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        clearAll();
        fetchCriminals();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        Home h = (Home) parent;
        h.showAddCriminal();
        h.editCriminals(Integer.parseInt((String) jTable3.getValueAt(jTable3.getSelectedRow(), 0)));

    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        int temp = Integer.parseInt("" + jTable3.getValueAt(jTable3.getSelectedRow(), 0));
        int result = JOptionPane.showOptionDialog(this,
                "Are you sure you want to Delete?\nID:" + temp + "\nName:" + jTable3.getValueAt(jTable3.getSelectedRow(), 1),
                "Password Confirmation Required", JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE, null, null, null);
        if (result == JOptionPane.YES_OPTION) {
            try {
                Database.getStatement().execute("SET FOREIGN_KEY_CHECKS=0;");
                Database.getStatement().execute("delete from tblpunishment where id=" + temp);
                Database.getStatement().execute("delete from mtblCriminals where cid=" + temp);
                Database.getStatement().execute("SET FOREIGN_KEY_CHECKS=1;");
            } catch (SQLException ex) {
                Logger.getLogger(AddU.class.getName()).log(Level.SEVERE, null, ex);
            }
            fetchCriminals();
            // clearAll();
        }
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        new Show((Integer.parseInt("" + jTable3.getValueAt(jTable3.getSelectedRow(), 0)))).setVisible(true);

    }//GEN-LAST:event_jLabel3MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton A;
    private javax.swing.JTextField CID1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cBloodgroup;
    private javax.swing.JComboBox cCity;
    private javax.swing.JComboBox cHair;
    private javax.swing.JComboBox cMarital;
    private javax.swing.JComboBox cState;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable3;
    private javax.swing.JLabel lArrest;
    private javax.swing.JLabel lBloodgroup;
    private javax.swing.JLabel lCell;
    private javax.swing.JLabel lCell1;
    private javax.swing.JLabel lCity;
    private javax.swing.JLabel lColor;
    private javax.swing.JLabel lEyes;
    private javax.swing.JLabel lFacility;
    private javax.swing.JLabel lFirst;
    private javax.swing.JLabel lFoot;
    private javax.swing.JLabel lGender;
    private javax.swing.JLabel lHair;
    private javax.swing.JLabel lHeight;
    private javax.swing.JLabel lId;
    private javax.swing.JLabel lInch;
    private javax.swing.JLabel lLast;
    private javax.swing.JLabel lMarital;
    private javax.swing.JLabel lMiddle;
    private javax.swing.JLabel lName;
    private javax.swing.JLabel lSection;
    private javax.swing.JLabel lState;
    private javax.swing.JLabel lWeight;
    private javax.swing.JLabel ldob;
    private javax.swing.JRadioButton rFemale;
    private javax.swing.JRadioButton rMale;
    private com.toedter.calendar.JDateChooser tArrestDate;
    private javax.swing.JTextField tCell;
    private javax.swing.JTextField tCell1;
    private javax.swing.JComboBox tColor;
    private javax.swing.JTextField tEyes;
    private javax.swing.JTextField tFacility;
    private javax.swing.JTextField tFirst;
    private javax.swing.JTextField tFoot;
    private javax.swing.JTextField tInch;
    private javax.swing.JTextField tLast;
    private javax.swing.JTextField tMiddle;
    private javax.swing.JTextField tSection;
    private javax.swing.JTextField tWeight;
    private com.toedter.calendar.JDateChooser tdob;
    // End of variables declaration//GEN-END:variables

    private void allStates() {
        try {

            //cState.removeAllItems();
            ResultSet rs2 = Database.getStatement().executeQuery("select name from location where parent_id=100");
            //rs2.next();
            mState.addElement("");
            mCity.addElement("");
            while (rs2.next()) {
                mState.addElement("" + rs2.getString(1));

            }
        } catch (SQLException ex) {
            Logger.getLogger(AddC.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void fetchCriminals() {
        try {
            dtm.setRowCount(0);
            ResultSet rs = Database.getStatement().executeQuery("Select  cid,fname,mname,lname,gender,ad,city,facility,section,cell from mtblCriminals");
            ResultSetMetaData rsmd = rs.getMetaData();
            int num = rsmd.getColumnCount();
            String[] name = new String[num];
            for (int i = 0; i < num; i++) {
                name[i] = rsmd.getColumnName(i + 1);
            }
            dtm.setColumnIdentifiers(name);
            byte b[] = null;
            while (rs.next()) {
                // b=rs.getBytes(2);
                String rowdata[] = new String[num];
                for (int i = 0; i < num; i++) {
                    /* if(i==1)
                     {  
                     b=rs.getBytes(2);
                     }
                     else*/
                    rowdata[i] = rs.getString(i + 1);

                }
                dtm.addRow(rowdata);
            }
            //ImageIcon icon = new ImageIcon(b);
            // System.out.println("lol"+b);
            // jLabel1.setIcon(new ImageIcon (Toolkit.getDefaultToolkit().createImage(b)));
            //  dtm.setValueAt(icon, 0, 1);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

    }

    void clearAll() {
        JTextField tfield = null;
        JPanel tJpanel = null;
        for (Component c : this.getComponents()) {
            //  System.out.println(c);
            if (c.getClass().toString().contains("javax.swing.JPanel")) {
                tJpanel = (JPanel) c;
                for (Component d : tJpanel.getComponents()) {
                    if (d.getClass().toString().contains("javax.swing.JTextField")) {
                        tfield = (JTextField) d;
                        tfield.setText("");
                    }
                }
            }
        }

        tdob.setDate(null);
        CID1.setText("");
        A.setSelected(true);
        tColor.setSelectedItem("");
        tArrestDate.setDate(null);
        mState.setSelectedItem("");
        mCity.setSelectedItem("");
        cMarital.setSelectedIndex(0);
        cHair.setSelectedIndex(0);
        cBloodgroup.setSelectedIndex(0);

    }

    private void search() {
        try {
            dtm.setRowCount(0);
            Date dateFromtArrest = tArrestDate.getDate();
            String dateArrest = (String.format("%1$tY-%1$tm-%1$td", dateFromtArrest));
            if (dateArrest.equals("null-null-null")) {
                dateArrest = "";
            }
            Date dateFromttdob = tdob.getDate();
            String datedob = (String.format("%1$tY-%1$tm-%1$td", dateFromttdob));
            if (datedob.equals("null-null-null")) {
                datedob = "";
            }
            String mar = (String) cMarital.getSelectedItem();
            if (mar.equals(" ")) {
                mar = "";
            }
            String col = (String) tColor.getSelectedItem();
            if (col.equals(" ")) {
                col = "";
            }
            String ha = (String) cHair.getSelectedItem();
            if (ha.equals(" ")) {
                ha = "";
            }
            String b = (String) cBloodgroup.getSelectedItem();
            if (b.equals(" ")) {
                b = "";
            }
            String sHeight = null;
            double Height = (Double.parseDouble(tFoot.getText() + "." + tInch.getText() + "0"));
            if (Height == 0) {
                sHeight = "";
            } else {
                sHeight = String.valueOf(Height).replace(".0", "");
            }
            ResultSet rs = Database.getStatement().executeQuery("select cid,fname,mname,lname,gender,ad,city,facility,section,cell from mtblCriminals where "
                    + "ifnull(ad,1) like '%" + dateArrest + "%' and "
                    + "fname like '%" + tFirst.getText() + "%' and "
                    + "mname like '%" + tMiddle.getText() + "%' and "
                    + "lname like '%" + tLast.getText() + "%' and "
                    + "ifnull(dob,1) like '%" + datedob + "%' and "
                    + "state like '%" + cState.getSelectedItem() + "%' and "
                    + "city like '%" + cCity.getSelectedItem() + "%' and "
                    + "gender like '%" + (rMale.isSelected() ? "M" : rFemale.isSelected() ? "F" : "") + "%' and "
                    + "mstatus like '%" + mar + "%' and "
                    + "color like '%" + col + "%' and "
                    + "hair like '%" + ha + "%' and "
                    + "bg like '%" + b + "%' and "
                    + "ifnull(height,1) like '%" + sHeight + "%' and "
                    + "weight like '%" + tWeight.getText() + "%' and "
                    + "eyes like '%" + tEyes.getText() + "%' and "
                    + "facility like '%" + tFacility.getText() + "%' and "
                    + "section like '%" + tSection.getText() + "%' and "
                    + "cell like '%" + tCell.getText() + "%'");
            ResultSetMetaData rsmd = rs.getMetaData();
            int num = rsmd.getColumnCount();
            String[] name = new String[num];
            for (int i = 0; i < num; i++) {
                name[i] = rsmd.getColumnName(i + 1);
            }
            dtm.setColumnIdentifiers(name);
            while (rs.next()) {
                // b=rs.getBytes(2);
                String rowdata[] = new String[num];
                for (int i = 0; i < num; i++) {
                    rowdata[i] = rs.getString(i + 1);
                }
                dtm.addRow(rowdata);
            }
            System.out.println(Height);

        } catch (SQLException ex) {
            Logger.getLogger(SearchC.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void searchById(int id) {
        try {
            dtm.setRowCount(0);
            ResultSet rs = Database.getStatement().executeQuery("Select cid,fname,mname,lname,gender,ad,city,facility,section,cell from mtblCriminals where cid=" + id);
            ResultSetMetaData rsmd = rs.getMetaData();
            int num = rsmd.getColumnCount();
            String[] name = new String[num];
            for (int i = 0; i < num; i++) {
                name[i] = rsmd.getColumnName(i + 1);
            }
            dtm.setColumnIdentifiers(name);
            while (rs.next()) {
                // b=rs.getBytes(2);
                String rowdata[] = new String[num];
                for (int i = 0; i < num; i++) {
                    rowdata[i] = rs.getString(i + 1);
                }
                dtm.addRow(rowdata);

            }
        } catch (SQLException ex) {
            Logger.getLogger(SearchC.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void searchButton() {
        if (CID1.getText().equals("")) {
            search();
        } else {
            searchById(Integer.parseInt(CID1.getText()));
        }
        if (dtm.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "No Record Found!");
            fetchCriminals();
            clearAll();
        }
    }
}
