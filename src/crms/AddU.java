/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package crms;

import java.awt.Component;
import java.security.NoSuchAlgorithmException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Base64;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.Cipher;
import javax.crypto.NoSuchPaddingException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Orlon
 */
public class AddU extends javax.swing.JPanel {

    /**
     * Creates new form SearchC
     */
    DefaultTableModel dtm;
    PreparedStatement pst;

    Boolean edited = false;

    public AddU() {

        dtm = new DefaultTableModel(0, 0) {

            @Override
            public boolean isCellEditable(int row, int column) {
                //all cells false
                return false;
            }
        };
        dtm.isCellEditable(0, 0);
        fetchUsers();
        initComponents();
        tName.setTransferHandler(null);
        tUsername.setTransferHandler(null);
        tPassword.setTransferHandler(null);
        tMobile.setTransferHandler(null);
        tLocation.setTransferHandler(null);

        tID.setText("#" + currentID());
        try {
            pst = Database.getConnection().prepareStatement("insert into tblUsers values(null,?,?,AES_ENCRYPT(?,'rycbarm'),?,?,?,null);");
        } catch (SQLException ex) {
            Logger.getLogger(AddU.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        tLastlogin = new javax.swing.JTextField();
        tLocation = new javax.swing.JTextField();
        tName = new javax.swing.JTextField();
        tMobile = new javax.swing.JTextField();
        tUsername = new javax.swing.JTextField();
        tID = new javax.swing.JTextField();
        cRole = new javax.swing.JComboBox();
        jButton7 = new javax.swing.JButton();
        bRefresh = new javax.swing.JButton();
        bSave = new javax.swing.JButton();
        tPassword = new javax.swing.JPasswordField();
        bNew = new javax.swing.JButton();
        bEdit = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        Panel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        bSearch = new javax.swing.JButton();
        bDelete = new javax.swing.JButton();

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("ID");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Name");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Username");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Password");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Role");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Mobile No");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Location");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Last Login");

        tLastlogin.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tLastlogin.setEnabled(false);
        tLastlogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tLastloginActionPerformed(evt);
            }
        });

        tLocation.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tLocationActionPerformed(evt);
            }
        });
        tLocation.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tLocationKeyTyped(evt);
            }
        });

        tName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tNameActionPerformed(evt);
            }
        });
        tName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tNameKeyTyped(evt);
            }
        });

        tMobile.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tMobile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tMobileActionPerformed(evt);
            }
        });
        tMobile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tMobileKeyTyped(evt);
            }
        });

        tUsername.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tUsernameActionPerformed(evt);
            }
        });
        tUsername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tUsernameKeyTyped(evt);
            }
        });

        tID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tID.setEnabled(false);
        tID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tIDActionPerformed(evt);
            }
        });

        cRole.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cRole.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Jailer", "Judge", "CBI", "Police" }));
        cRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cRoleActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton7.setText("........................illuminati");
        jButton7.setToolTipText("Show Password");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        bRefresh.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bRefresh.setText("Refresh");
        bRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRefreshActionPerformed(evt);
            }
        });

        bSave.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bSave.setText("Save");
        bSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSaveActionPerformed(evt);
            }
        });

        tPassword.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tPasswordKeyTyped(evt);
            }
        });

        bNew.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bNew.setText("New");
        bNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNewActionPerformed(evt);
            }
        });

        bEdit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bEdit.setText("Edit");
        bEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEditActionPerformed(evt);
            }
        });

        jLabel10.setForeground(new java.awt.Color(255, 0, 0));
        jLabel10.setText("*");

        jLabel11.setForeground(new java.awt.Color(255, 0, 0));
        jLabel11.setText("*");

        jLabel12.setForeground(new java.awt.Color(255, 0, 0));
        jLabel12.setText("*");

        jLabel13.setForeground(new java.awt.Color(255, 0, 0));
        jLabel13.setText("*");

        jLabel14.setForeground(new java.awt.Color(255, 0, 0));
        jLabel14.setText("*");

        jLabel15.setForeground(new java.awt.Color(255, 0, 0));
        jLabel15.setText("*");

        jLabel16.setForeground(new java.awt.Color(255, 0, 0));
        jLabel16.setText("*");

        jTable2.setModel(dtm);
        jTable2.getTableHeader().setReorderingAllowed(false);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout PanelLayout = new javax.swing.GroupLayout(Panel);
        Panel.setLayout(PanelLayout);
        PanelLayout.setHorizontalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 874, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        PanelLayout.setVerticalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        bSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bSearch.setText("Search");

        bDelete.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bDelete.setText("Delete");
        bDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cRole, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel11))
                                    .addComponent(tID, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel10)))
                                .addGap(19, 19, 19))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tMobile, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(4, 4, 4)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel13))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(tPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel16))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(tLastlogin, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel14)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tName, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel15))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(358, 358, 358)
                        .addComponent(bSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(bEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bNew, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bSave, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bRefresh))
                    .addComponent(Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(tName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(tUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(jButton7)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(tLastlogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(tMobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(tLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bRefresh)
                        .addComponent(bSave)
                        .addComponent(bNew)
                        .addComponent(bEdit)
                        .addComponent(bSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bDelete)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(105, 105, 105))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tLastloginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tLastloginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tLastloginActionPerformed

    private void tLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tLocationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tLocationActionPerformed

    private void tNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tNameActionPerformed

    private void tMobileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tMobileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tMobileActionPerformed

    private void tUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tUsernameActionPerformed

    private void tIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tIDActionPerformed

    private void cRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cRoleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cRoleActionPerformed
    Boolean a = true;
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        if (a) {
            tPassword.setEchoChar((char) 0);
            a = false;
        } else {
            tPassword.setEchoChar('*');
            a = true;
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void bRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRefreshActionPerformed
        // TODO add your handling code here:
        fetchUsers();
        if (!edited) {
            tID.setText("#" + currentID());
        }
    }//GEN-LAST:event_bRefreshActionPerformed

    private void bSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSaveActionPerformed
        // TODO add your handling code here:
        if (verify()) {
            if (!edited) {
                addUsers();
                
            } else {
                updateUser();
                
            }

        }
    }//GEN-LAST:event_bSaveActionPerformed

    private void bNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNewActionPerformed
        // TODO add your handling code here:
        JTextField tfield = null;
        //  System.out.println(c);

        for (Component d : this.getComponents()) {
            if (d.getClass().toString().contains("javax.swing.JTextField")) {
                tfield = (JTextField) d;
                tfield.setText("");
            }
        }
        tPassword.setText("");
        cRole.setSelectedItem("Jailer");
        tID.setText("#" + currentID());
        edited = false;
        bEdit.setEnabled(true);
        bRefresh.setEnabled(true);
        bDelete.setEnabled(true);
        bNew.setText("New");
        fetchUsers();


    }//GEN-LAST:event_bNewActionPerformed

    private void bEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEditActionPerformed
        // TODO add your handling code here:
        try {
            edit(Integer.parseInt("" + jTable2.getValueAt(jTable2.getSelectedRow(), 0)));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "No user Selected");
        }

    }//GEN-LAST:event_bEditActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2 && !evt.isConsumed()) {
            evt.consume();
            edit(Integer.parseInt("" + jTable2.getValueAt(jTable2.getSelectedRow(), 0)));

            //handle double click event.
        }
    }//GEN-LAST:event_jTable2MouseClicked

    private void bDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDeleteActionPerformed
        // TODO add your handling code here:
        int temp = Integer.parseInt("" + jTable2.getValueAt(jTable2.getSelectedRow(), 0));
        int result = JOptionPane.showOptionDialog(this,
                "Are you sure you want to Delete?\nID:" + temp + "\nName:" + jTable2.getValueAt(jTable2.getSelectedRow(), 1) + "\nUsername:" + jTable2.getValueAt(jTable2.getSelectedRow(), 1),
                "Exit Confirmation", JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE, null, null, null);
        if (result == JOptionPane.YES_OPTION) {
            try {
                Database.getStatement().execute("delete from tblUsers where id=" + temp);
            } catch (SQLException ex) {
                Logger.getLogger(AddU.class.getName()).log(Level.SEVERE, null, ex);
            }
            fetchUsers();
            clearAll();
        }
    }//GEN-LAST:event_bDeleteActionPerformed

    private void tUsernameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tUsernameKeyTyped
        // TODO add your handling code here:
        if (tUsername.getText().length() >= 20) {
            evt.consume();
        }
    }//GEN-LAST:event_tUsernameKeyTyped

    private void tPasswordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tPasswordKeyTyped
        // TODO add your handling code here
        if (tPassword.getText().length() >= 10) {
            evt.consume();
        }
    }//GEN-LAST:event_tPasswordKeyTyped

    private void tMobileKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tMobileKeyTyped
        // TODO add your handling code here:
        char caracter = evt.getKeyChar();
        if (((caracter < '0') || (caracter > '9')) || tMobile.getText().length() >= 11 && (caracter != '\b')) {
            evt.consume();
        }
    }//GEN-LAST:event_tMobileKeyTyped

    private void tLocationKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tLocationKeyTyped
        // TODO add your handling code here:
        char caracter = evt.getKeyChar();
        if (!((caracter < '0') || (caracter > '9')) || tLocation.getText().length() >= 20 && (caracter != '\b')) {
            evt.consume();
        }
    }//GEN-LAST:event_tLocationKeyTyped

    private void tNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tNameKeyTyped
        // TODO add your handling code here:
        if (tName.getText().length() >= 20) {
            evt.consume();
        }
    }//GEN-LAST:event_tNameKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Panel;
    private javax.swing.JButton bDelete;
    private javax.swing.JButton bEdit;
    private javax.swing.JButton bNew;
    private javax.swing.JButton bRefresh;
    private javax.swing.JButton bSave;
    private javax.swing.JButton bSearch;
    private javax.swing.JComboBox cRole;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField tID;
    private javax.swing.JTextField tLastlogin;
    private javax.swing.JTextField tLocation;
    private javax.swing.JTextField tMobile;
    private javax.swing.JTextField tName;
    private javax.swing.JPasswordField tPassword;
    private javax.swing.JTextField tUsername;
    // End of variables declaration//GEN-END:variables

    private void fetchUsers() {
        try {
            dtm.setRowCount(0);
            ResultSet rs = Database.getStatement().executeQuery("Select id,Name,Username,Role,Mobile,Location,Last_Login from tblUsers where Role<>'admin'");
            ResultSetMetaData rsmd = rs.getMetaData();
            int num = rsmd.getColumnCount();
            String[] name = new String[num];
            for (int i = 0; i < num; i++) {
                name[i] = rsmd.getColumnName(i + 1);
            }
            dtm.setColumnIdentifiers(name);
            while (rs.next()) {
                String rowdata[] = new String[num];
                for (int i = 0; i < num; i++) {
                    rowdata[i] = rs.getString(i + 1);
                }
                dtm.addRow(rowdata);
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

    }

    private int currentID() {
        //To change body of generated methods, choose Tools | Templates.
        int currentid = 0;
        try {
            ResultSet rs = Database.getStatement().executeQuery("SELECT `AUTO_INCREMENT` FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'crms' AND TABLE_NAME = 'tblUsers';");
            rs.next();
            currentid = rs.getInt(1);
        } catch (SQLException ex) {
            Logger.getLogger(AddC.class.getName()).log(Level.SEVERE, null, ex);
        }
        return currentid;
    }

    private void addUsers() {
        try {
            pst = Database.getConnection().prepareStatement("insert into tblUsers values(null,?,?,AES_ENCRYPT(?,'rycbarm'),?,?,?,null);");

            pst.setString(1, "" + tName.getText());
            pst.setString(2, "" + tUsername.getText());
            pst.setString(3, "" + tPassword.getText());
            // pst.setString(4,""+tUsername.getText());
            pst.setString(4, "" + cRole.getSelectedItem());
            pst.setString(5, "" + tMobile.getText());
            pst.setString(6, "" + tLocation.getText());
            pst.executeUpdate();
            clearAll();
            fetchUsers();

        } catch (SQLException ex) {
            Logger.getLogger(AddU.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    private void edit(int id) {
        try {
            ResultSet rs = Database.getStatement().executeQuery("select * from tblUsers where id=" + id);
            if (rs.next()) {
                tID.setText("#" + rs.getInt(1));
                tName.setText("" + rs.getString(2));
                tUsername.setText("" + rs.getString(3));
                cRole.setSelectedItem("" + rs.getString(5));
                tMobile.setText("" + rs.getString(6));
                tLocation.setText("" + rs.getString(7));
                tLastlogin.setText("" + rs.getString(8));
                rs = Database.getStatement().executeQuery("select AES_DECRYPT(password,'rycbarm') from tblUsers where id=" + id);
                rs.next();
                tPassword.setText("" + rs.getString(1));
                edited = true;
                bEdit.setEnabled(false);
                bRefresh.setEnabled(false);
                bDelete.setEnabled(false);
                bNew.setText("Cancel");
                dtm.setRowCount(0);

            }
        } catch (SQLException ex) {
            Logger.getLogger(AddU.class.getName()).log(Level.SEVERE, null, ex);
        }
        //clearAll();
    }

    private void updateUser() {
        try {
            PreparedStatement pst = Database.getConnection().prepareStatement("update tblUsers set Name=?,UserName=?,Password=AES_ENCRYPT(?,'rycbarm'),Role=?,Mobile=?,Location=? where id=?");
            pst.setString(1, tName.getText());
            pst.setString(2, tUsername.getText());
            pst.setString(3, tPassword.getText());
            pst.setString(4, "" + cRole.getSelectedItem());
            pst.setString(5, "" + tMobile.getText());
            pst.setString(6, "" + tLocation.getText());
            pst.setInt(7, Integer.parseInt((tID.getText()).replaceAll("[^\\d.]", "")));
            pst.execute();
            edited = false;
            bEdit.setEnabled(true);
            bRefresh.setEnabled(true);
            bDelete.setEnabled(true);
            bNew.setText("New");
            clearAll();
            fetchUsers();
        } catch (SQLException ex) {
            if (ex.getMessage().contains("Duplicate entry")) {
                JOptionPane.showMessageDialog(this, "Username already exist");
            }
        }
        
    }

    private Boolean verify() {
        String s = "";
        Boolean a = true;
        if ("".equals(tName.getText())) {
            s += "Name Required.\n";
            a = a & false;
        }

        if ("".equals(tUsername.getText())) {
            s += "Username Required.\n";
            a = a & false;
        }
        if (!edited && !unique(tUsername.getText())) {

            s += "Username is not unique.\n";
            a = a & false;
        }
        if ("".equals(tPassword.getText())) {
            s += "Password Required\n";
            a = a & false;
        }
        if ("".equals(tMobile.getText())) {
            s += "Mobile number Required\n";
            a = a & false;
        }
        if ("".equals(tLocation.getText())) {
            s += "Location Required.\n";
            a = a & false;
        }
        if (!a) {
            JOptionPane.showMessageDialog(null, s, "Mandatory Fields", JOptionPane.ERROR_MESSAGE);
        }
        return a;
    }

    private boolean unique(String text) {
        Boolean u = true;
        try {
            ResultSet rs = Database.getStatement().executeQuery("Select * from tblUsers where UserName='" + text + "'");
            if (rs.next()) {
                u = false;
            }
        } catch (SQLException ex) {
            Logger.getLogger(AddU.class.getName()).log(Level.SEVERE, null, ex);
        }
        return u;

    }

    void clearAll() {
        JTextField tfield = null;
        //  System.out.println(c);

        for (Component d : this.getComponents()) {
            if (d.getClass().toString().contains("javax.swing.JTextField")) {
                tfield = (JTextField) d;
                tfield.setText("");
            }
        }
        tPassword.setText("");
        cRole.setSelectedItem("Jailer");
        tID.setText("#" + currentID());
        edited = false;
        bEdit.setEnabled(true);
        bRefresh.setEnabled(true);
        bDelete.setEnabled(true);
        bNew.setText("New");
       // fetchUsers();
    }
}
